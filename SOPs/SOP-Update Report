# SOP-Update Report

Use this SOP whenever you revise the alignment scores or narrative for an existing country or city report under `reports/`. It assumes no new evaluation keys are being added. Pair it with task-specific SOPs (for example, adding a brand-new key) when those flows tell you to "update existing reports".

## 0. Gather Core References
1. Open `family_profile.json` to anchor every judgement in the household’s priorities and weighting (`evaluation_weights_0_to_5`).
2. Review `data/DATA_DICTIONARY.md` to confirm how categories, keys, and reports relate.
3. Load the authoritative lookup data with the PowerShell helpers instead of hand-parsing JSON:
   - `pwsh scripts/powershell/Categories_GET.ps1 -AsJson`
   - `pwsh scripts/powershell/CategoryKeys_GET.ps1 -AsJson`
   - `pwsh scripts/powershell/Countries_GET.ps1 -AsJson` and, if applicable, `pwsh scripts/powershell/Cities_GET.ps1 -CountryIds '<countryId>' -AsJson`
4. Open the target report file (e.g., `reports/portugal_report.json`). If you are updating a city, also open the parent country report so you can mirror tone and inheritance logic.

> Do not begin editing until these four data sources are in front of you—they contain everything needed for a quality update.

## 1. Build a Review Checklist
1. Create a quick worksheet (mental or written) that lists every `key` from `data/category_keys.json`, grouped by category.
2. Record the existing `alignmentValue`, `alignmentText`, and any `sameAsParent` flags from the report.
3. Highlight entries where the justification already seems misaligned with the rating guide or family priorities.

## 2. Re-Evaluate Every Key
For each key in your checklist:

1. **Read the rating guide.** Consult `data/rating_guides.json` and identify the descriptions that bracket the location’s current reality.
2. **Factor in the family profile.** Prefer conservative scores when the profile marks the topic as critical.
3. **Set the score.** Update `alignmentValue` to the rating that best fits the evidence. Use integers 1–10; use `0` only when dependable data is unavailable (and leave the text empty). Avoid `-1` except for explicit "Unknown" placeholders that reviewers expect.
4. **Rewrite the narrative.** Draft 1–2 sentences for `alignmentText` that:
   - Cite concrete, current evidence (policies, data points, trends).
   - Tie that evidence to the family’s priorities.
   - Implicitly justify the chosen score without restating the rating-guide language verbatim.
5. **Document gaps.** Flag missing data in your worksheet so the follow-up work is obvious.

## 3. Apply Changes to JSON
1. Work directly inside the existing report file. Preserve the `iso` field and the overall ordering of the `values` array when practical.
2. Update each key’s object with the new `alignmentValue` and `alignmentText`. Retain existing `sameAsParent` flags for cities unless you truly diverge from the parent report.
3. Add or update a top-level `"version": 2` field immediately after the opening `{`. If `version` already exists, bump it to `2`.
4. Confirm every key from `data/category_keys.json` is present exactly once. Do **not** add or remove keys during a standard update.
5. Maintain valid JSON syntax (commas, quotes, etc.).

## 4. Quality-Control Pass
1. Reread the entire report to ensure the tone is evidence-driven and tailored to the family profile.
2. Double-check that each score is compatible with its rating-guide description.
3. Validate JSON structure by running `node -e "JSON.parse(fs.readFileSync('reports/<file>.json','utf8'))"` on the updated report.
4. When updating a city, confirm any `sameAsParent` keys still reflect the current country scores.

## 5. Prepare for Commit
1. Review your diff to ensure only the intended fields changed, plus the `version` update.
2. Summarize major score shifts and any data gaps in your commit message or PR description.
3. If additional SOPs triggered this update (e.g., adding a new key), return to them and continue the remaining steps.
